{"version":3,"sources":["node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","node_modules/@juggle/resize-observer/lib/ResizeObservation.js","node_modules/@juggle/resize-observer/lib/ResizeObserver.js","node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","node_modules/@juggle/resize-observer/lib/exports/resize-observer.js","node_modules/@juggle/resize-observer/lib/utils/element.js","node_modules/@juggle/resize-observer/lib/utils/freeze.js","node_modules/@juggle/resize-observer/lib/utils/global.js","node_modules/@juggle/resize-observer/lib/utils/process.js","node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","node_modules/@juggle/resize-observer/lib/utils/scheduler.js"],"names":[],"mappings":"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","sourcesContent":["import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","export { ResizeObserver } from '../ResizeObserver';\nexport { ResizeObserverEntry } from '../ResizeObserverEntry';\nexport { ResizeObserverSize } from '../ResizeObserverSize';\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var freeze = function (obj) { return Object.freeze(obj); };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","var resizeObservers = [];\nexport { resizeObservers };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n"],"sourceRoot":"webpack:///","file":"juggle-resize-observer-es5.js"}